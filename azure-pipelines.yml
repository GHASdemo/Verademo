# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
# This is an example of using VeraDemo Java test application with the Veracode Static Pipeline scanner.  A Veracode subscription is required.
trigger:
- main
pool:
  vmImage: 'ubuntu-latest'
  demands: 
    - java

steps:
- task: Maven@3
  displayName: Build with Maven
  inputs:
    mavenPomFile: 'app/pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'

# - task: Bash@3
#   displayName: Veracode SCA
#   inputs:
#     targetType: 'inline'
#     script: |
#       curl -sSL https://download.sourceclear.com/ci.sh | sh
    # env:
    #   SRCCLR_API_TOKEN: $(SRCCLR_API_TOKEN)
- task: Bash@3
  displayName: 'Veracode SCA'
  inputs:
     targetType: 'inline'
     script: |
          # export SRCCLR_SCM_URI=https://github.com/christyson/verademo
          # export SRCCLR_API_TOKEN="$(SRCCLR_API_TOKEN)"
          # export SRCCLR_SCM_REF=master
          # export SRCCLR_SCM_REF_TYPE=branch
          # export SRCCLR_SCM_REV=123456
          curl -sSL https://download.sourceclear.com/ci.sh | bash -s -- scan ./app

# - task: Bash@3
#   displayName: Veracode Pipeline
#   inputs:
#     targetType: 'inline'
#     script: |
#       curl -sSO https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
#       unzip -o pipeline-scan-LATEST.zip
#       java -jar pipeline-scan.jar -vid $(VERACODE_API_ID) -vkey $(VERACODE_API_KEY) -f /home/vsts/work/1/s/app/target/verademo.war || true
# - publish: $(System.DefaultWorkingDirectory)/results.json
#   artifact: VeracodeSASTpipeline

# - task: Bash@3
#   displayName: 'Container image scan'
#   inputs:
#     targetType: 'inline'
#     script: |
#       curl -fsS https://tools.veracode.com/veracode-cli/install | sh
#       export VERACODE_API_KEY_ID=$(VERACODE_API_ID)
#       export VERACODE_API_KEY_SECRET=$(VERACODE_API_KEY)
#       ./veracode scan --type image --source veracode scan --type image \
#         --source juliantotzek/verademo:latest --output verademo.json

# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: 'verademo.json'
#     ArtifactName: 'VeracodeContainerScan'
#     publishLocation: 'Container'

# - task: Bash@3
#   displayName: 'Policy check'
#   inputs:
#     targetType: 'inline'
#     script: |
#       PASS=$(jq -r '."policy-passed"' verademo.json)
#       echo "Passed policy: $PASS"
#       if $PASS; then
#         exit 0
#       else
#         exit 1
#       fi
